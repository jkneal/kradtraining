<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE dataset SYSTEM "data.dtd">
<!--  Auto-generated by the Maven Impex Plugin -->
<dataset>
    <KREN_CNTNT_TYP_T CNTNT_TYP_ID="1" CNTNT_TYP_VER_NBR="0" CUR_IND="T"
        DESC_TXT="Simple content type" NM="Simple"
        NMSPC_CD="notification/ContentTypeSimple" VER_NBR="1"
        XSD="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?>&#xa;&lt;!-- This schema describes a simple notification.  It only contains a content&#xa;element which is a String...about as simple as one can get -->&#xa;&lt;schema xmlns=&quot;http://www.w3.org/2001/XMLSchema&quot;&#xa;  xmlns:c=&quot;ns:notification/common&quot;&#xa;  xmlns:cs=&quot;ns:notification/ContentTypeSimple&quot;&#xa;  targetNamespace=&quot;ns:notification/ContentTypeSimple&quot;&#xa;  attributeFormDefault=&quot;unqualified&quot; &#xa;    elementFormDefault=&quot;qualified&quot;>&#xa;  &lt;annotation>&#xa;    &lt;documentation xml:lang=&quot;en&quot;>&#xa;      Simple Content Schema&#xa;    &lt;/documentation>&#xa;  &lt;/annotation>&#xa;  &lt;import namespace=&quot;ns:notification/common&quot; schemaLocation=&quot;resource:notification/notification-common&quot; />&#xa;  &lt;!--  The content element is just a String -->&#xa;  &lt;element name=&quot;content&quot;>&#xa;    &lt;complexType>&#xa;      &lt;sequence>&#xa;        &lt;element name=&quot;message&quot; type=&quot;c:LongStringType&quot;/>&#xa;      &lt;/sequence>&#xa;    &lt;/complexType>&#xa;  &lt;/element>&#xa;&lt;/schema>" XSL="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?>&#xa;&lt;xsl:stylesheet&#xa;   version=&quot;1.0&quot; &#xa;   xmlns:xsl=&quot;http://www.w3.org/1999/XSL/Transform&quot; &#xa;   xmlns:n=&quot;ns:notification/ContentTypeSimple&quot; &#xa;   xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; &#xa;   xsi:schemaLocation=&quot;ns:notification/ContentTypeSimple resource:notification/ContentTypeSimple&quot; &#xa;   exclude-result-prefixes=&quot;n xsi&quot;>&#xa;   &lt;xsl:output method=&quot;html&quot; omit-xml-declaration=&quot;yes&quot; />&#xa;   &lt;xsl:template match=&quot;/n:content/n:message&quot;>&#xa;      &lt;strong>&#xa;          &lt;xsl:value-of select=&quot;.&quot; disable-output-escaping=&quot;yes&quot;/>&#xa;      &lt;/strong>&#xa;   &lt;/xsl:template>&#xa;&lt;/xsl:stylesheet>"/>
    <KREN_CNTNT_TYP_T CNTNT_TYP_ID="2" CNTNT_TYP_VER_NBR="0" CUR_IND="T"
        DESC_TXT="Event content type" NM="Event"
        NMSPC_CD="notification/ContentTypeEvent" VER_NBR="1"
        XSD="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?>&#xa;&lt;!-- This schema defines an generic event notification type in order for it&#xa;to be accepted into the system. -->&#xa;&lt;schema xmlns=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:c=&quot;ns:notification/common&quot; xmlns:ce=&quot;ns:notification/ContentTypeEvent&quot; targetNamespace=&quot;ns:notification/ContentTypeEvent&quot; attributeFormDefault=&quot;unqualified&quot; elementFormDefault=&quot;qualified&quot;>&#xa;  &lt;annotation>&#xa;    &lt;documentation xml:lang=&quot;en&quot;>Content Event Schema&lt;/documentation>&#xa;  &lt;/annotation>&#xa;  &lt;import namespace=&quot;ns:notification/common&quot; schemaLocation=&quot;resource:notification/notification-common&quot; />&#xa;  &lt;!-- The content element describes the content of the notification.  It&#xa;  contains a message (a simple String) and a message element -->&#xa;  &lt;element name=&quot;content&quot;>&#xa;    &lt;complexType>&#xa;      &lt;sequence>&#xa;        &lt;element name=&quot;message&quot; type=&quot;c:LongStringType&quot;/>&#xa;        &lt;element ref=&quot;ce:event&quot;/>&#xa;      &lt;/sequence>&#xa;    &lt;/complexType>&#xa;  &lt;/element>&#xa;  &lt;!-- This is the event element.  It describes a simple event type containing a&#xa;  summary, description, location, and start/stop times -->&#xa;  &lt;element name=&quot;event&quot;>&#xa;    &lt;complexType>&#xa;      &lt;sequence>&#xa;        &lt;element name=&quot;summary&quot; type=&quot;c:NonEmptyShortStringType&quot; />&#xa;        &lt;element name=&quot;description&quot; type=&quot;c:NonEmptyShortStringType&quot; />&#xa;        &lt;element name=&quot;location&quot; type=&quot;c:NonEmptyShortStringType&quot; />&#xa;        &lt;element name=&quot;startDateTime&quot; type=&quot;c:NonEmptyShortStringType&quot; />&#xa;        &lt;element name=&quot;stopDateTime&quot; type=&quot;c:NonEmptyShortStringType&quot; />&#xa;      &lt;/sequence>&#xa;    &lt;/complexType>&#xa;  &lt;/element>&#xa;&lt;/schema>" XSL="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?>&#xa;&lt;!-- style sheet declaration: be very careful editing the following, the&#xa;     default namespace must be used otherwise elements will not match -->&#xa;&lt;xsl:stylesheet&#xa;    version=&quot;1.0&quot; &#xa;    xmlns:xsl=&quot;http://www.w3.org/1999/XSL/Transform&quot; &#xa;    xmlns:n=&quot;ns:notification/ContentTypeEvent&quot; &#xa;    xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; &#xa;    xsi:schemaLocation=&quot;ns:notification/ContentTypeEvent resource:notification/ContentTypeEvent&quot; &#xa;    exclude-result-prefixes=&quot;n xsi&quot;>&#xa;    &lt;!-- output an html fragment -->&#xa;    &lt;xsl:output method=&quot;html&quot; indent=&quot;yes&quot; />&#xa;    &lt;!-- match everything -->&#xa;    &lt;xsl:template match=&quot;/n:content&quot; >&#xa;        &lt;table class=&quot;bord-all&quot;>&#xa;            &lt;xsl:apply-templates />&#xa;        &lt;/table>&#xa;    &lt;/xsl:template>&#xa;    &lt;!--  match message element in the default namespace and render as strong -->&#xa;    &lt;xsl:template match=&quot;n:message&quot; >&#xa;        &lt;caption>&#xa;            &lt;strong>&lt;xsl:value-of select=&quot;.&quot; disable-output-escaping=&quot;yes&quot;/>&lt;/strong>&#xa;        &lt;/caption>&#xa;    &lt;/xsl:template>&#xa;    &lt;!-- match on event in the default namespace and display all children -->&#xa;    &lt;xsl:template match=&quot;n:event&quot;>&#xa;        &lt;tr>&#xa;            &lt;td class=&quot;thnormal&quot;>&lt;strong>Summary: &lt;/strong>&lt;/td>&#xa;            &lt;td class=&quot;thnormal&quot;>&lt;xsl:value-of select=&quot;n:summary&quot; />&lt;/td>&#xa;        &lt;/tr>&#xa;        &lt;tr>&#xa;            &lt;td class=&quot;thnormal&quot;>&lt;strong>Description: &lt;/strong>&lt;/td>&#xa;            &lt;td class=&quot;thnormal&quot;>&lt;xsl:value-of select=&quot;n:description&quot; />&lt;/td>&#xa;        &lt;/tr>&#xa;        &lt;tr>&#xa;            &lt;td class=&quot;thnormal&quot;>&lt;strong>Location: &lt;/strong>&lt;/td>&#xa;            &lt;td class=&quot;thnormal&quot;>&lt;xsl:value-of select=&quot;n:location&quot; />&lt;/td>&#xa;        &lt;/tr>&#xa;        &lt;tr>&#xa;            &lt;td class=&quot;thnormal&quot;>&lt;strong>Start Time: &lt;/strong>&lt;/td>&#xa;            &lt;td class=&quot;thnormal&quot;>&lt;xsl:value-of select=&quot;n:startDateTime&quot; />&lt;/td>&#xa;        &lt;/tr>&#xa;        &lt;tr>&#xa;            &lt;td class=&quot;thnormal&quot;>&lt;strong>End Time: &lt;/strong>&lt;/td>&#xa;            &lt;td class=&quot;thnormal&quot;>&lt;xsl:value-of select=&quot;n:stopDateTime&quot; />&lt;/td>&#xa;        &lt;/tr>&#xa;    &lt;/xsl:template> &#xa;&lt;/xsl:stylesheet>"/>
</dataset>
