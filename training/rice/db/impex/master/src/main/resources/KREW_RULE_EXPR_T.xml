<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE dataset SYSTEM "data.dtd">
<!--  Auto-generated by the Maven Impex Plugin -->
<dataset>
    <KREW_RULE_EXPR_T OBJ_ID="616A0754-3BA6-39DF-9A1B-11432849DC6B"
        RULE_EXPR="import edu.sampleu.recipe.util.RecipeUtils&#xa;&#x9;&#x9;        import org.apache.commons.lang.StringUtils&#xa;&#x9;&#x9;&#x9;&#x9;import org.kuali.rice.kew.engine.RouteContext;&#xa;&#x9;&#x9;&#x9;&#x9;import org.kuali.rice.kew.rule.Rule;&#xa;&#x9;&#x9;&#x9;&#x9;import org.kuali.rice.kew.rule.RuleExpressionResult;&#xa;&#x9;&#x9;        &#xa;&#x9;&#x9;&#x9;&#x9;String ingredients = RecipeUtils.getRecipeIngredientsFromRecipeDocumentContent(routeContext)&#xa;&#x9;&#x9;&#xa;&#x9;&#x9;&#x9;&#x9;if(StringUtils.containsIgnoreCase(ingredients, &quot;chicken&quot;)) {&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;return RecipeUtils.constructGroupApprovalRequest(&quot;KR-WKFLW:ChickenRecipeMasters&quot;, rule)&#xa;&#x9;&#x9;        } else {&#xa;&#x9;&#x9;        &#x9;/* Return an empty route request */&#xa;&#x9;&#x9;        &#x9;return RecipeUtils.constructEmptyApprovalRequest(rule);&#xa;&#x9;&#x9;        }"
        RULE_EXPR_ID="2000" TYP="BSF:groovy" VER_NBR="1"/>
    <KREW_RULE_EXPR_T OBJ_ID="3364EB47-6407-9C45-8AAD-7A8310266208"
        RULE_EXPR="import javax.xml.namespace.QName&#xa;&#x9;&#x9;&#x9;&#x9;import org.kuali.rice.resourceloader.GlobalResourceLoader&#xa;&#x9;&#x9;&#x9;&#x9;import edu.sampleu.magazine.service.MagazineService&#xa;&#x9;&#x9;        import edu.sampleu.recipe.util.RecipeUtils&#xa;&#x9;&#x9;        import org.apache.commons.lang.StringUtils&#xa;&#x9;&#x9;&#x9;&#x9;import org.kuali.rice.kew.engine.RouteContext&#xa;&#x9;&#x9;&#x9;&#x9;import org.kuali.rice.kew.rule.Rule&#xa;&#x9;&#x9;&#x9;&#x9;import org.kuali.rice.kew.rule.RuleExpressionResult&#xa;&#x9;&#x9;        &#xa;&#x9;&#x9;&#x9;&#x9;String origin = RecipeUtils.getRecipeOriginFromRecipeDocumentContent(routeContext)&#xa;&#x9;&#x9;&#x9;&#x9;&#xa;&#x9;&#x9;&#x9;&#x9;QName serviceName = new QName(&quot;magazineNamespace&quot;, &quot;magazineSoapService&quot;)&#xa;&#x9;&#x9;&#x9;&#x9;MagazineService magazineSoapService = (MagazineService) GlobalResourceLoader.getService(serviceName)&#xa;&#x9;&#x9;&#x9;&#x9;String managedMagazines[] = magazineSoapService.getAllManagedMagazines()&#xa;&#x9;&#x9;&#xa;&#x9;&#x9;&#x9;&#x9;if(ArrayUtils.contains(managedMagazines, origin)) {&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;return RecipeUtils.constructGroupApprovalRequest(&quot;KR-WKFLW:MagazineManagers&quot;, rule)&#xa;&#x9;&#x9;        } else {&#xa;&#x9;&#x9;        &#x9;/* Return an empty route request */&#xa;&#x9;&#x9;        &#x9;return RecipeUtils.constructEmptyApprovalRequest(rule);&#xa;&#x9;&#x9;        }"
        RULE_EXPR_ID="2001" TYP="BSF:groovy" VER_NBR="1"/>
</dataset>
